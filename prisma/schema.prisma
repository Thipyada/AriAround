generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime     @default(now())
  name           String       @unique
  role           Role         @default(USER)
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String       @db.ObjectId
}

model Admin {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime     @default(now())
  name        String       @unique
  role        Role         @default(ADMIN)
  permissions Permission[]
  profile     AdminRole?
}

model AdminRole {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  profilePic String?
  phone      String?
  email      String   @unique
  admin      Admin    @relation(fields: [adminId], references: [id])
  adminId    String   @unique @db.ObjectId
}

model Organization {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  name      String   @unique
  Instagram String?
  Facebook  String?
  type      String
  status    Status   @default(PENDING)
  users     User[]
}

model Permission {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  feature   String   @unique
  show      Boolean //Show/Hide
  viewOnly  Boolean
  eud       Boolean //Edit/Updata/Delete
  Admin     Admin?   @relation(fields: [adminId], references: [id])
  adminId   String?  @db.ObjectId
}

enum Status {
  APPROVED //meaning the organization is approved to use the app = ACTIVE
  PENDING
  REJECTED
}

enum Role {
  ADMIN
  USER
}
